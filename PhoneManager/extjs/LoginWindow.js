/*
 * File: LoginWindow.js
 * Date: Wed Jan 11 2012 15:00:52 GMT+0100 (CET)
 * 
 * This file was generated by Ext Designer version 1.1.2.
 * http://www.sencha.com/products/designer/
 *
 * This file will be generated the first time you export.
 *
 * You should implement event handling and custom methods in this
 * class.
 */

LoginWindow = Ext.extend(LoginWindowUi, {
    phoneManager: null,
    asteriskManager: null,
    
    initComponent: function() {
        LoginWindow.superclass.initComponent.call(this);
        
        // Registriere Listener für UI-Componenten
        this.buttonLogin.on('click', this.login, this);
        this.username.addListener('specialkey', function(f,e){if (e.getKey() == e.ENTER) this.login()}, this);
        this.secret.addListener('specialkey', function(f,e){if (e.getKey() == e.ENTER) this.login()}, this);
        this.save.addListener('specialkey', function(f,e){if (e.getKey() == e.ENTER) this.login()}, this);
        
        // Lade Zugangsdaten aus Cookie
        this.loadManagerData();
    },
    
    loadManagerData: function(){
        var username = Ext.util.Cookies.get('managerUsername');
        var secret = Ext.util.Cookies.get('managerSecret');
        // Wenn Daten aus Cookies vorhanden, starte Anmeldung
        if(username !== null && secret !== null){
            this.loginManager(username, secret);
            this.on('show', this.hideAfterLogin, this);
        }
    },
    
    hideAfterLogin: function(){
        this.hide();
        this.removeListener('show', this.hideAfterLogin);
    },
    
    login: function(){
        var username = this.username.getValue();
        var secret = this.secret.getValue();
        var save = this.save.getValue();
        
        this.loginManager(username, secret);
        
        if(save){
            Ext.util.Cookies.set('managerUsername', username);
            Ext.util.Cookies.set('managerSecret', secret);
        }else{
            Ext.util.Cookies.set('managerUsername', '', new Date());
            Ext.util.Cookies.set('managerSecret', '', new Date());
        }
    },
    
    reset: function(){
        this.username.setValue('');
        this.secret.setValue('');
        this.save.setValue(false);        
    },
    
    loginManager: function(username, secret){
        // Define Manager to login
        var manager = new Manager(username, secret);
        manager.addListener(this.managerStateListener, this);

        // Define Asterisk-Server
        this.asteriskManager = new AsteriskManager(manager);
        //this.asteriskManager.enableKeepalive(true);
        
        manager.login();
    },
    
    logoutManager: function(){
        this.asteriskManager.manager.logout();
    },
    
    managerStateListener: function(args){
        var loginState = args[0];
        if(loginState){
            // Bei Erfolg: starte Programm
            this.hide();
            this.startPhoneManager();
        }else{
            // Bei Misserfolg: lösche Cookies!
            Ext.util.Cookies.set('managerUsername', '', new Date());
            Ext.util.Cookies.set('managerSecret', '', new Date());
            this.show();
            this.reset();
            this.phoneManager.close();
        }
    },
    
    startPhoneManager: function(){
        this.phoneManager = new PhoneManager();
        this.phoneManager.setAsteriskManager(this.asteriskManager);
        this.phoneManager.show();
        this.phoneManager.on('logout', this.logoutManager, this);
    }
        
});